{"version":3,"sources":["components/Dialogs/MessageWindow/MessageWindow.module.css","components/Dialogs/DialogSelector/DialogSelector.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/MessageWindow/MessageWindow.jsx","components/Dialogs/MessageWindow/MessageContainer.jsx","components/Dialogs/DialogSelector/DialogSelector.jsx","components/Dialogs/DialogSelector/DialogContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["module","exports","Message","props","className","s","message","src","Textarea","Element","maxLength100","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","sendMess","Field","name","component","placeholder","validate","requiredField","alt","MessageWindow","messages","messagesBody","map","m","id","values","sendMessage","messageBody","MessageContainer","connect","state","getMessages","DialogItem","cn","dialog","dialogCurrent","currentURL","toString","photo","to","onClick","setUrl","dialogText","DialogSelector","dialogs","friends","d","photos","small","url","getFriends","getFriendsThunkCreator","urlArray","window","location","href","split","useState","length","useEffect","Preloader","Dialogs","dialogsWrapper"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,SAAW,gCAAgC,aAAe,oCAAoC,QAAU,+BAA+B,SAAW,kC,oBCApKD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,cAAgB,sCAAsC,WAAa,qC,oBCAvKD,EAAOC,QAAU,CAAC,eAAiB,kC,sHCO7BC,EAAU,SAACC,GACb,OAAO,sBAAKC,UAAWC,IAAEC,QAAlB,UACH,qBAAKC,IAAI,0DACT,8BACI,+BAAOJ,EAAMG,gBAKnBE,EAAWC,YAAQ,YACnBC,EAAeC,YAAiB,KAWhCC,EAAmBC,YAAU,CAACC,KAAM,qBAAjBD,EAVL,SAACV,GACjB,OAAO,uBAAMY,SAAUZ,EAAMa,aAAcZ,UAAWC,IAAEY,SAAjD,UACH,cAACC,EAAA,EAAD,CAAOC,KAAM,cACNC,UAAWZ,EACXa,YAAY,qBACZC,SAAU,CAACC,IAAeb,KAEjC,iCAAQ,qBAAKH,IAAI,iDAAiDiB,IAAK,2BAehEC,EAVO,SAACtB,GAEnB,OAAO,sBAAKC,UAAWC,IAAEqB,SAAlB,UACH,qBAAKtB,UAAWC,IAAEsB,aAAlB,SACKxB,EAAMuB,SAASE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASwB,GAAID,EAAEC,UAEhE,cAAClB,EAAD,CAAkBG,SALD,SAACgB,GAAD,OAAY5B,EAAM6B,YAAYD,EAAOE,oB,iBCd/CC,EALUC,aANH,SAACC,GACtB,MAAO,CACNV,SAAUW,YAAYD,MAMvB,CAACJ,iBAFuBG,CAGxBV,G,0DCVKa,EAAa,SAACnC,GAChB,OAAO,sBAAKC,UAAWmC,IACnBlC,IAAEmC,OADmB,eAEnBnC,IAAEoC,cAAgBtC,EAAMuC,aAAevC,EAAM2B,GAAGa,aAF/C,UAIH,qBAAKpC,IAAKJ,EAAMyC,MACXpB,IAAK,iBACV,cAAC,IAAD,CAASqB,GAAI,YAAc1C,EAAM2B,GAAIgB,QACjC,kBAAM3C,EAAM4C,OAAO5C,EAAM2B,GAAGa,aADhC,SAGI,qBAAKvC,UAAWC,IAAE2C,WAAlB,SACK7C,EAAMgB,aAgBR8B,EAVQ,SAAC9C,GACpB,OAAO,qBAAKC,UAAWC,IAAE6C,QAAlB,SACF/C,EAAMgD,QAAQvB,KAAI,SAAAwB,GAAC,OAAI,cAAC,EAAD,CAAYjC,KAAMiC,EAAEjC,KACRW,GAAIsB,EAAEtB,GACNc,MAAOQ,EAAEC,OAAOC,MAChBP,OAAQ5C,EAAM4C,OACdL,WAAYvC,EAAMoD,Y,iBCN/CpB,eANO,SAACC,GACtB,MAAO,CACNe,QAASK,YAAWpB,MAMrB,CAACqB,4BAFatB,EAdS,SAAChC,GACxB,IAAMuD,EAAWC,OAAOC,SAASC,KAAKC,MAAM,KADV,EAEZC,mBAASL,EAASA,EAASM,OAAS,IAFxB,mBAE3BT,EAF2B,KAEtBR,EAFsB,KAIlC,OADAkB,qBAAU,WAAO9D,EAAMsD,2BAA2B,IAC7CtD,EAAMgD,QACJ,cAAC,EAAD,CAAgBA,QAAShD,EAAMgD,QAASI,IAAKA,EAAKR,OAAQA,IADtC,cAACmB,EAAA,EAAD,O,kBCAbC,UAPC,SAAChE,GAChB,OAAO,sBAAKC,UAAWC,IAAE+D,eAAlB,UACL,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/3.ae73185a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessageWindow_messages__3e2zF\",\"messagesBody\":\"MessageWindow_messagesBody__uou-g\",\"message\":\"MessageWindow_message__3wJMF\",\"sendMess\":\"MessageWindow_sendMess__2IDY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogSelector_dialogs__2CNqO\",\"dialog\":\"DialogSelector_dialog__2Z94z\",\"dialogCurrent\":\"DialogSelector_dialogCurrent__2_jhY\",\"dialogText\":\"DialogSelector_dialogText__1qstm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__32OS1\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nimport s from './MessageWindow.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        <img src='https://tgram.ru/wiki/channels/image/audiobooking.jpg'/>\r\n        <div>\r\n            <text>{props.message}</text>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={s.sendMess}>\r\n        <Field name={\"messageBody\"}\r\n               component={Textarea}\r\n               placeholder=\"Write a message...\"\r\n               validate={[requiredField, maxLength100]}\r\n        />\r\n        <button><img src='https://img.icons8.com/ios/452/paper-plane.png' alt={\"Message button\"}/></button>\r\n    </form>\r\n}\r\nconst MessageReduxForm = reduxForm({form: \"dialogMessageForm\"})(MessageForm)\r\n\r\nconst MessageWindow = (props) => {\r\n    let sendNewMessage = (values) => props.sendMessage(values.messageBody)\r\n    return <div className={s.messages}>\r\n        <div className={s.messagesBody}>\r\n            {props.messages.map(m => <Message message={m.message} id={m.id}/>)}\r\n        </div>\r\n        <MessageReduxForm onSubmit={sendNewMessage}/>\r\n    </div>\r\n}\r\n\r\nexport default MessageWindow;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport MessageWindow from \"./MessageWindow\";\r\nimport {sendMessage} from \"../../../redux/dialogs-reducer\";\r\nimport {getMessages} from \"../../../redux/getters-selectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmessages: getMessages(state)\r\n\t}\r\n}\r\n\r\nconst MessageContainer = connect(\r\n\tmapStateToProps,\r\n\t{sendMessage})\r\n(MessageWindow);\r\n\r\nexport default MessageContainer;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport s from './DialogSelector.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={cn(\r\n        s.dialog,\r\n        {[s.dialogCurrent]: props.currentURL === props.id.toString()}\r\n    )}>\r\n        <img src={props.photo}\r\n             alt={\"friend photo\"}/>\r\n        <NavLink to={\"/dialogs/\" + props.id} onClick={\r\n            () => props.setUrl(props.id.toString())\r\n        }>\r\n            <div className={s.dialogText}>\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nconst DialogSelector = (props) => {\r\n    return <div className={s.dialogs}>\r\n        {props.friends.map(d => <DialogItem name={d.name}\r\n                                            id={d.id}\r\n                                            photo={d.photos.small}\r\n                                            setUrl={props.setUrl}\r\n                                            currentURL={props.url}/>)}\r\n    </div>\r\n}\r\n\r\nexport default DialogSelector;","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport DialogSelector from \"./DialogSelector\";\r\nimport {getDialogs, getFriends} from \"../../../redux/getters-selectors\";\r\nimport {getFriendsThunkCreator} from \"../../../redux/users-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst DialogContainer = (props) => {\r\n\tconst urlArray = window.location.href.split(\"/\")\r\n\tconst [url, setUrl] = useState(urlArray[urlArray.length - 1])\r\n\tuseEffect(() => {props.getFriendsThunkCreator()}, [])\r\n\tif (!props.friends) return <Preloader />\r\n\treturn <DialogSelector friends={props.friends} url={url} setUrl={setUrl}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfriends: getFriends(state)\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{getFriendsThunkCreator})\r\n(DialogContainer);","import React from \"react\";\r\n\r\nimport MessageContainer from \"./MessageWindow/MessageContainer\";\r\nimport DialogContainer from \"./DialogSelector/DialogContainer\";\r\nimport s from './Dialogs.module.css'\r\n\r\nconst Dialogs = (props) => {\r\n\treturn <div className={s.dialogsWrapper}>\r\n\t\t\t<DialogContainer />\r\n\t\t\t<MessageContainer />\r\n\t\t</div>\r\n};\r\n\r\nexport default Dialogs;"],"sourceRoot":""}