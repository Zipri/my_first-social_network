{"version":3,"sources":["components/Login/Login.jsx"],"names":["Input","Element","minLength6","minLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaURL","console","log","onSubmit","name","component","placeholder","validate","requiredField","type","src","connect","state","isAuth","getIsAuth","getCaptchaURL","loginThunkCreator","to","formData","email","password","rememberMe","captcha"],"mappings":"gKAAA,kGAYMA,EAAQC,YAAQ,SAChBC,EAAaC,YAAiB,GAkC9BC,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAjCL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAErC,OADAC,QAAQC,IAAIH,GACL,uBAAMI,SAAUL,EAAhB,UACH,8BACI,cAAC,IAAD,CAAOM,KAAM,QACNC,UAAWd,EACXe,YAAY,QACZC,SAAU,CAACC,SAEtB,8BACI,cAAC,IAAD,CAAOJ,KAAM,WACNC,UAAWd,EACXe,YAAY,WACZG,KAAM,WACNF,SAAU,CAACC,IAAef,OAErC,gCACI,cAAC,IAAD,CAAOW,KAAM,aACNC,UAAW,QACXI,KAAM,aAHjB,kBAKA,2CACCV,EACAC,GAAc,gCACX,qBAAKU,IAAKV,IACV,cAAC,IAAD,CAAOI,KAAM,UACNC,UAAWd,EACXe,YAAY,kBACZC,SAAU,CAACC,gBA0BfG,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQC,YAAUF,GAClBZ,WAAYe,YAAcH,MAGU,CAACI,uBAA1BL,EAnBD,SAAC,GAA6C,IAA5CE,EAA2C,EAA3CA,OAAQb,EAAmC,EAAnCA,WAAYgB,EAAuB,EAAvBA,kBAOhC,OAAIH,EAAe,cAAC,IAAD,CAAUI,GAAI,aAC1B,gCACH,8CACA,cAACtB,EAAD,CAAgBQ,SATH,SAACe,GAAD,OAAcF,EAC3BE,EAASC,MACTD,EAASE,SACTF,EAASG,WACTH,EAASI,UAK2BtB,WAAYA","file":"static/js/4.b5e2a372.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport {minLengthCreator, requiredField} from \"../utils/validators/validators\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {getCaptchaURL, getIsAuth} from \"../../redux/getters-selectors\";\r\n\r\nimport s from './Login.module.css';\r\n\r\nconst Input = Element(\"input\")\r\nconst minLength6 = minLengthCreator(6)\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    console.log(error)\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field name={\"email\"}\r\n                   component={Input}\r\n                   placeholder=\"email\"\r\n                   validate={[requiredField]}/>\r\n        </div>\r\n        <div>\r\n            <Field name={\"password\"}\r\n                   component={Input}\r\n                   placeholder=\"password\"\r\n                   type={\"password\"}\r\n                   validate={[requiredField, minLength6]}/>\r\n        </div>\r\n        <div>\r\n            <Field name={\"rememberMe\"}\r\n                   component={\"input\"}\r\n                   type={\"checkbox\"}/> Remember me\r\n        </div>\r\n        <button>Login</button>\r\n        {error}\r\n        {captchaURL && <div>\r\n            <img src={captchaURL}/>\r\n            <Field name={\"captcha\"}\r\n                   component={Input}\r\n                   placeholder=\"Captcha symbols\"\r\n                   validate={[requiredField]}/>\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({isAuth, captchaURL, loginThunkCreator}) => {\r\n    const onSubmit = (formData) => loginThunkCreator(\r\n        formData.email,\r\n        formData.password,\r\n        formData.rememberMe,\r\n        formData.captcha\r\n    )\r\n    if (isAuth) return <Redirect to={\"/profile\"}/>\r\n    return <div>\r\n        <h1>Please Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    captchaURL: getCaptchaURL(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);"],"sourceRoot":""}