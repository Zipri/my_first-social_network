{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogSelector/DialogSelector.module.css","components/Dialogs/MessageWindow/MessageWindow.module.css","components/Dialogs/DialogSelector/DialogSelector.jsx","components/Dialogs/MessageWindow/MessageWindow.jsx","components/Dialogs/Dialogs.jsx"],"names":["module","exports","DialogItem","props","className","cn","s","dialog","dialogCurrent","currentURL","id","toString","src","photo","alt","to","onClick","setUrl","dialogText","name","DialogSelector","dialogs","friends","map","d","photos","small","url","Message","message","Textarea","Element","maxLength100","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","sendMess","Field","component","placeholder","validate","requiredField","MessageWindow","messages","messagesBody","m","values","sendMessage","messageBody","Dialogs","dialogsWrapper","connect","state","getFriends","getMessages","isAuth","getIsAuth","getFriendsThunkCreator","urlArray","window","location","href","split","history","useHistory","useState","length","useEffect","push","Preloader"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,eAAiB,kC,oBCAnCD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,cAAgB,sCAAsC,WAAa,qC,oBCAvKD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,aAAe,oCAAoC,QAAU,+BAA+B,SAAW,kC,+ICK9JC,EAAa,SAACC,GAChB,OAAO,sBAAKC,UAAWC,IACnBC,IAAEC,OADmB,eAEnBD,IAAEE,cAAgBL,EAAMM,aAAeN,EAAMO,GAAGC,aAF/C,UAIH,qBAAKC,IAAKT,EAAMU,MACXC,IAAK,iBACV,cAAC,IAAD,CAASC,GAAI,YAAcZ,EAAMO,GAAIM,QACjC,kBAAMb,EAAMc,OAAOd,EAAMO,GAAGC,aADhC,SAGI,qBAAKP,UAAWE,IAAEY,WAAlB,SACKf,EAAMgB,aAgBRC,EAVQ,SAACjB,GACpB,OAAO,qBAAKC,UAAWE,IAAEe,QAAlB,SACFlB,EAAMmB,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYL,KAAMK,EAAEL,KACRT,GAAIc,EAAEd,GACNG,MAAOW,EAAEC,OAAOC,MAChBT,OAAQd,EAAMc,OACdR,WAAYN,EAAMwB,Y,4ECrBxDC,EAAU,SAACzB,GACb,OAAO,sBAAKC,UAAWE,IAAEuB,QAAlB,UACH,qBAAKjB,IAAI,0DACT,8BACI,+BAAOT,EAAM0B,gBAKnBC,EAAWC,YAAQ,YACnBC,EAAeC,YAAiB,KAWhCC,EAAmBC,YAAU,CAACC,KAAM,qBAAjBD,EAVL,SAAChC,GACjB,OAAO,uBAAMkC,SAAUlC,EAAMmC,aAAclC,UAAWE,IAAEiC,SAAjD,UACH,cAACC,EAAA,EAAD,CAAOrB,KAAM,cACNsB,UAAWX,EACXY,YAAY,qBACZC,SAAU,CAACC,IAAeZ,KAEjC,iCAAQ,qBAAKpB,IAAI,iDAAiDE,IAAK,2BAehE+B,EAVO,SAAC1C,GAEnB,OAAO,sBAAKC,UAAWE,IAAEwC,SAAlB,UACH,qBAAK1C,UAAWE,IAAEyC,aAAlB,SACK5C,EAAM2C,SAASvB,KAAI,SAAAyB,GAAC,OAAI,cAAC,EAAD,CAASnB,QAASmB,EAAEnB,QAASnB,GAAIsC,EAAEtC,UAEhE,cAACwB,EAAD,CAAkBG,SALD,SAACY,GAAD,OAAY9C,EAAM+C,YAAYD,EAAOE,oB,iBCrBxDC,EAAU,SAACjD,GAAD,OAAW,sBAAKC,UAAWE,IAAE+C,eAAlB,UACvB,cAAC,EAAD,CAAgB/B,QAASnB,EAAMmB,QACfK,IAAKxB,EAAMwB,IACXV,OAAQd,EAAMc,SAC9B,cAAC,EAAD,CAAe6B,SAAU3C,EAAM2C,SAChBI,YAAa/C,EAAM+C,kBA2BvBI,uBARO,SAACC,GACnB,MAAO,CACHjC,QAASkC,YAAWD,GACpBT,SAAUW,YAAYF,GAC5BG,OAAQC,YAAUJ,MAMhB,CAACK,2BAAwBV,iBAFdI,EAxBS,SAACnD,GACrB,IAAM0D,EAAWC,OAAOC,SAASC,KAAKC,MAAM,KACzCC,EAAUC,cAFkB,EAGTC,mBAASP,EAASA,EAASQ,OAAS,IAH3B,mBAGxB1C,EAHwB,KAGnBV,EAHmB,KAQ/B,OAJAqD,qBAAU,WACNnE,EAAMyD,2BACP,IACDzD,EAAMuD,QAAQQ,EAAQK,KAAK,UACxBpE,EAAMmB,QACJ,cAAC,EAAD,CAASA,QAASnB,EAAMmB,QACfwB,SAAU3C,EAAM2C,SAChBI,YAAa/C,EAAM+C,YACnBvB,IAAKA,EACLV,OAAQA,IALG,cAACuD,EAAA,EAAD","file":"static/js/3.bc6c1167.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__32OS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogSelector_dialogs__2CNqO\",\"dialog\":\"DialogSelector_dialog__2Z94z\",\"dialogCurrent\":\"DialogSelector_dialogCurrent__2_jhY\",\"dialogText\":\"DialogSelector_dialogText__1qstm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessageWindow_messages__3e2zF\",\"messagesBody\":\"MessageWindow_messagesBody__uou-g\",\"message\":\"MessageWindow_message__3wJMF\",\"sendMess\":\"MessageWindow_sendMess__2IDY7\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nimport s from './DialogSelector.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={cn(\r\n        s.dialog,\r\n        {[s.dialogCurrent]: props.currentURL === props.id.toString()}\r\n    )}>\r\n        <img src={props.photo}\r\n             alt={\"friend photo\"}/>\r\n        <NavLink to={\"/dialogs/\" + props.id} onClick={\r\n            () => props.setUrl(props.id.toString())\r\n        }>\r\n            <div className={s.dialogText}>\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nconst DialogSelector = (props) => {\r\n    return <div className={s.dialogs}>\r\n        {props.friends.map(d => <DialogItem name={d.name}\r\n                                            id={d.id}\r\n                                            photo={d.photos.small}\r\n                                            setUrl={props.setUrl}\r\n                                            currentURL={props.url}/>)}\r\n    </div>\r\n}\r\n\r\nexport default DialogSelector;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nimport s from './MessageWindow.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        <img src='https://tgram.ru/wiki/channels/image/audiobooking.jpg'/>\r\n        <div>\r\n            <text>{props.message}</text>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={s.sendMess}>\r\n        <Field name={\"messageBody\"}\r\n               component={Textarea}\r\n               placeholder=\"Write a message...\"\r\n               validate={[requiredField, maxLength100]}\r\n        />\r\n        <button><img src='https://img.icons8.com/ios/452/paper-plane.png' alt={\"Message button\"}/></button>\r\n    </form>\r\n}\r\nconst MessageReduxForm = reduxForm({form: \"dialogMessageForm\"})(MessageForm)\r\n\r\nconst MessageWindow = (props) => {\r\n    let sendNewMessage = (values) => props.sendMessage(values.messageBody)\r\n    return <div className={s.messages}>\r\n        <div className={s.messagesBody}>\r\n            {props.messages.map(m => <Message message={m.message} id={m.id}/>)}\r\n        </div>\r\n        <MessageReduxForm onSubmit={sendNewMessage}/>\r\n    </div>\r\n}\r\n\r\nexport default MessageWindow;","import React, {useEffect, useState} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport DialogSelector from \"./DialogSelector/DialogSelector\";\r\nimport {getFriends, getIsAuth, getMessages} from \"../../redux/getters-selectors\";\r\nimport {connect} from \"react-redux\";\r\nimport {getFriendsThunkCreator} from \"../../redux/users-reducer\";\r\nimport MessageWindow from \"./MessageWindow/MessageWindow\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => <div className={s.dialogsWrapper}>\r\n    <DialogSelector friends={props.friends}\r\n                    url={props.url}\r\n                    setUrl={props.setUrl}/>\r\n    <MessageWindow messages={props.messages}\r\n                   sendMessage={props.sendMessage}/>\r\n</div>\r\n\r\nconst DialogContainer = (props) => {\r\n    const urlArray = window.location.href.split(\"/\")\r\n\tconst history = useHistory();\r\n    const [url, setUrl] = useState(urlArray[urlArray.length - 1])\r\n    useEffect(() => {\r\n        props.getFriendsThunkCreator()\r\n    }, [])\r\n\tif (!props.isAuth) history.push(\"/login\")\r\n    if (!props.friends) return <Preloader/>\r\n    return <Dialogs friends={props.friends}\r\n                    messages={props.messages}\r\n                    sendMessage={props.sendMessage}\r\n                    url={url}\r\n                    setUrl={setUrl}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: getFriends(state),\r\n        messages: getMessages(state),\r\n\t\tisAuth: getIsAuth(state),\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getFriendsThunkCreator, sendMessage})\r\n(DialogContainer);"],"sourceRoot":""}